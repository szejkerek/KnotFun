name: Actions ðŸ˜Ž

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "build-${{ github.run_id }}"
          release_name: "Build - Run #${{ github.run_id }}"
          body: "This release contains the latest build artifact for Windows."
          draft: false
          prerelease: false

      - name: Upload Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build
          asset_name: Build-Windows.zip
          asset_content_type: application/zip

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Notify Discord with release link
        uses: actions/github-script@v6
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          script: |
            const repo = '${{ github.repository }}';
            const tag = 'build-${{ github.run_id }}';
            const releaseUrl = `https://github.com/${repo}/releases/tag/${tag}`;
            const message = `**Build Released!** \n [Download Release](${releaseUrl})`;
            const response = await fetch(process.env.DISCORD_WEBHOOK_URL, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ content: message })
            });
            if (!response.ok) {
              throw new Error(`Failed to send message to Discord: ${response.statusText}`);
            }
